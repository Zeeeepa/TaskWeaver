"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6563],{2304:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(4848),s=n(8453);const r={title:"Roles in TaskWeaver",authors:["liqli","xu"],date:new Date("2024-05-07T00:00:00.000Z")},o=void 0,i={permalink:"/TaskWeaver/blog/role",editUrl:"https://github.com/microsoft/TaskWeaver/tree/main/website/blog/role.md",source:"@site/blog/role.md",title:"Roles in TaskWeaver",description:'We frame TaskWeaver as a code-first agent framework. The term "code-first" means that the agent is designed to',date:"2024-05-07T00:00:00.000Z",tags:[],readingTime:4.81,hasTruncateMarker:!0,authors:[{name:"Liqun Li",url:"https://liqul.github.io",title:"Principal Researcher",imageURL:"https://liqul.github.io/assets/logo_small_bw.png",key:"liqli",page:null},{name:"Xu Zhang",url:"https://scholar.google.com/citations?user=bqXdMMMAAAAJ&hl=zh-CN",title:"Senior Researcher",imageURL:"https://scholar.googleusercontent.com/citations?view_op=view_photo&user=bqXdMMMAAAAJ&citpid=3",key:"xu",page:null}],frontMatter:{title:"Roles in TaskWeaver",authors:["liqli","xu"],date:"2024-05-07T00:00:00.000Z"},unlisted:!1,prevItem:{title:"How to evaluate a LLM agent?",permalink:"/TaskWeaver/blog/evaluation"}},l={authorsImageUrls:[void 0,void 0]},c=[];function d(e){const t={em:"em",mermaid:"mermaid",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["We frame TaskWeaver as a ",(0,a.jsx)(t.strong,{children:"code-first"})," agent framework. The term \"code-first\" means that the agent is designed to\nconvert the user's request into one or multiple runnable code snippets and then execute them to generate the response.\nThe philosophy behind this design is to consider programming languages as the de facto language for communication in cyber-physical systems,\njust like the natural language for human communication. Therefore, TaskWeaver translates the user's request in natural language into\nprogramming languages, which can be executed by the system to perform the desired tasks."]}),"\n",(0,a.jsxs)(t.p,{children:["Under this design, when the developer needs to extend the agent's capability, they can write a new plugin.\nA plugin is a piece of code wrapped in a class that can be called as a function by the agent in the generated code snippets.\nLet's consider an example: ",(0,a.jsx)(t.em,{children:"the agent is asked to load a CSV file and perform anomaly detection on the data"}),".\nThe workflow of the agent is in the diagram below. It is very natural to represent data to be processed in variables and this task in code snippets."]}),"\n",(0,a.jsx)(t.mermaid,{value:'flowchart TD\n    A[User] --"read a.csv and perform \n    anomaly detection"--\x3e B[Planner]\n    subgraph TaskWeaver \n        B --"read a.csv and call the \n        anomaly_detection plugin\n        to find anomalies in the data"--\x3e C[Code Generator]\n        subgraph Code Interpreter\n            C --"df=pd.read_csv(\'a.csv\')\n            anomaly_df=anomaly_detection(df)"--\x3e D[Code Executor]\n        end\n    end\n    D --result--\x3e B\n    B --response--\x3e A'})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var a=n(6540);const s={},r=a.createContext(s);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);